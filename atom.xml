<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Xjt5213&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.xjt5213.club/"/>
  <updated>2019-04-12T07:58:34.644Z</updated>
  <id>https://www.xjt5213.club/</id>
  
  <author>
    <name>xjt5213</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>清除浮动的几种方法</title>
    <link href="https://www.xjt5213.club/2019/04/12/%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>https://www.xjt5213.club/2019/04/12/清除浮动的方法/</id>
    <published>2019-04-12T06:43:45.000Z</published>
    <updated>2019-04-12T07:58:34.644Z</updated>
    
    <content type="html"><![CDATA[<p>今天在班上分享几种清除浮动的方法，讲到一半突然忘了，贼尴尬，于是自己在网上找了几种解决办法来清除浮动</p><p>先看一段代码—-html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"myDiv"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"myDiv01"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"myDiv02"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>再给一段css代码  </p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type="text/css"&gt;</span><br><span class="line">       <span class="selector-class">.myDiv</span>&#123;</span><br><span class="line">           <span class="attribute">background-color</span>: red;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="selector-class">.myDiv01</span>&#123;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">           <span class="attribute">background-color</span>: pink;</span><br><span class="line">           <span class="attribute">float</span>:left;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="selector-class">.myDiv02</span>&#123;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">           <span class="attribute">background-color</span>: aqua;</span><br><span class="line">           <span class="attribute">float</span>:left;</span><br><span class="line">       &#125;</span><br><span class="line">   &lt;/style&gt;</span><br></pre></td></tr></table></figure><p>上面代码中我分别给了两个子div一个<code>float：left;</code>于是他们就向左浮动，出现在一行了；看看下图效果</p><p><img src="https://i.loli.net/2019/04/12/5cb03649c9429.png" alt="1"></p><p>从中可以看到，当我给两个子div分别设置向左浮动之后，可以看看右下角的盒子模型，父div的高度变成了0，这是为什么呢？</p><p style="font-size:18px;font-weight:blod;background-color:yellow;">情况是这样的，当我们分别给两个子div设置<code>float:left;</code>之后，父就会脱离文档流，不在占有页面位置了，所以我们看到的高度为0了</p><p>那么我们应该怎样解决这种情况呢（在不删除<code>float:left;</code>的情况下）？？</p><p>在网上找了几种解决办法：</p><h4 id="1，利用clear-both"><a href="#1，利用clear-both" class="headerlink" title="1，利用clear:both;"></a>1，利用<code>clear:both;</code></h4><p>1，在父级下面增加一个空标签，设置css属性为<code>clear:both;</code>。看代码—css</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type="text/css"&gt;</span><br><span class="line">       <span class="selector-class">.myDiv</span>&#123;</span><br><span class="line">           <span class="attribute">background-color</span>: red;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="selector-class">.myDiv01</span>&#123;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">           <span class="attribute">background-color</span>: pink;</span><br><span class="line">           <span class="attribute">float</span>: left;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="selector-class">.myDiv02</span>&#123;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">           <span class="attribute">background-color</span>: aqua;</span><br><span class="line">           <span class="attribute">float</span>: left;</span><br><span class="line">       &#125;</span><br><span class="line">   + <span class="selector-class">.myDiv03</span>&#123;</span><br><span class="line">   +        clear: both;</span><br><span class="line">   +    &#125;</span><br><span class="line">   &lt;/style&gt;</span><br></pre></td></tr></table></figure><p>html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"myDiv"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"myDiv01"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"myDiv02"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  +      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"myDiv03"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>最后看效果</p><p><img src="https://i.loli.net/2019/04/12/5cb03a10ba298.png" alt="2"></p><p>可以看到加上上面代码之后，在看右下角的盒子模型，父级的高度变成了200px;也就是说生效了。</p><h4 id="2，直接给父级具体的宽和高"><a href="#2，直接给父级具体的宽和高" class="headerlink" title="2，直接给父级具体的宽和高"></a>2，直接给父级具体的宽和高</h4><p>我们可以直接给父级一个具体的宽高，之前我们是没有给父级宽度和高度的，父级的宽度和高度是由子撑开的 ，下面我们给父级一个具体的宽度和高度  </p><p>html  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"myDiv"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"myDiv01"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"myDiv02"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>css  </p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type="text/css"&gt;</span><br><span class="line">        <span class="selector-class">.myDiv</span>&#123;</span><br><span class="line">    +         width: 500px;</span><br><span class="line">    +        <span class="selector-tag">height</span>: 300<span class="selector-tag">px</span>;</span><br><span class="line">            <span class="selector-tag">background-color</span>: <span class="selector-tag">red</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.myDiv01</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: pink;</span><br><span class="line">            <span class="attribute">float</span>: left;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.myDiv02</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: aqua;</span><br><span class="line">            <span class="attribute">float</span>: left;</span><br><span class="line">        &#125;</span><br><span class="line">       </span><br><span class="line">    &lt;/style&gt;</span><br></pre></td></tr></table></figure><p>给了之后来看效果  </p><p><img src="https://i.loli.net/2019/04/12/5cb03c0c18d75.png" alt="3"></p><p>给了具体的宽高之后，右下角的盒子模型里面父级的宽度和高度就是css代码里面我给的宽高了，所以这种方法也可行  </p><h4 id="3，利用伪元素：：after"><a href="#3，利用伪元素：：after" class="headerlink" title="3，利用伪元素：：after"></a>3，利用伪元素<code>：：after</code></h4><p>我们还可以利用伪元素<code>::after</code>来达到清除浮动的效果，直接上代码  </p><p>html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"myDiv"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"myDiv01"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"myDiv02"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>css  </p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type="text/css"&gt;</span><br><span class="line">    <span class="selector-class">.myDiv</span>&#123;</span><br><span class="line">        <span class="attribute">background-color</span>: red;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.myDiv01</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: pink;</span><br><span class="line">        <span class="attribute">float</span>: left;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.myDiv02</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: aqua;</span><br><span class="line">        <span class="attribute">float</span>: left;</span><br><span class="line">    &#125;</span><br><span class="line">+     <span class="selector-class">.myDiv</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">+        content: "";</span><br><span class="line">+         <span class="selector-tag">width</span>: 0;</span><br><span class="line">+         <span class="selector-tag">height</span>: 0;</span><br><span class="line">+         <span class="selector-tag">visibility</span>: <span class="selector-tag">hidden</span>;</span><br><span class="line">+          <span class="selector-tag">display</span>: <span class="selector-tag">block</span>;</span><br><span class="line">+      &#125;</span><br><span class="line">   </span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>来看一下效果是什么样子的  </p><p><img src="https://i.loli.net/2019/04/12/5cb03daf9dc49.png" alt="4"></p><p>利用伪元素<code>::after</code>之后也可以解决 ，原理是通过清除伪元素的浮动，达到撑起父元素高度的目的。注意到该伪元素的<code>display</code>类型为<code>block</code>,他是一个不可见的块级元素。其原理跟方法一类似。</p><h4 id="4，利用overflow来清除浮动"><a href="#4，利用overflow来清除浮动" class="headerlink" title="4，利用overflow来清除浮动"></a>4，利用overflow来清除浮动</h4><p>我们可以直接给父元素一个<code>overflow:hidden;</code>或者<code>overflow:auto</code>样式，来看看代码  </p><p>html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"myDiv"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"myDiv01"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"myDiv02"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>css  </p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type="text/css"&gt;</span><br><span class="line">       <span class="selector-class">.myDiv</span>&#123;</span><br><span class="line">           <span class="attribute">background-color</span>: red;</span><br><span class="line">+           overflow: hidden;  /*用overflow:auto;也行*/</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="selector-class">.myDiv01</span>&#123;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">           <span class="attribute">background-color</span>: pink;</span><br><span class="line">           <span class="attribute">float</span>: left;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="selector-class">.myDiv02</span>&#123;</span><br><span class="line">           <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">           <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">           <span class="attribute">background-color</span>: aqua;</span><br><span class="line">           <span class="attribute">float</span>: left;</span><br><span class="line">       &#125;</span><br><span class="line">      </span><br><span class="line">   &lt;/style&gt;</span><br></pre></td></tr></table></figure><p>我们来看看效果  </p><p><img src="https://i.loli.net/2019/04/12/5cb03ffd770a4.png" alt="5">  </p><p>这个原理的话暂时还没弄明白，等后面弄明白了再来更新吧！！！  </p><h4 id="5，给父级也添加float-left-属性"><a href="#5，给父级也添加float-left-属性" class="headerlink" title="5，给父级也添加float:left;属性"></a>5，给父级也添加<code>float:left;</code>属性</h4><p>也可以直接给父级一个<code>float:left;</code>样式属性   看代码  </p><p>html  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"myDiv"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"myDiv01"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"myDiv02"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>css  </p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;style type="text/css"&gt;</span><br><span class="line">        <span class="selector-class">.myDiv</span>&#123;</span><br><span class="line">            <span class="attribute">background-color</span>: red;</span><br><span class="line">            <span class="attribute">float</span>: left;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.myDiv01</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: pink;</span><br><span class="line">            <span class="attribute">float</span>: left;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.myDiv02</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: aqua;</span><br><span class="line">            <span class="attribute">float</span>: left;</span><br><span class="line">        &#125;</span><br><span class="line">       </span><br><span class="line">    &lt;/style&gt;</span><br></pre></td></tr></table></figure><p>我们来看效果  </p><p><img src="https://i.loli.net/2019/04/12/5cb041ed7dfcd.png" alt="6"></p><p>当给父级一个<code>float:left;</code>之后，父级的高度也被撑开了，但是这种做法使得父级也脱离了文档流，虽然方便，但是对页面的布局不是很友好，不易维护。 </p><p>以上就是我总结的五种清除浮动的方法，可能有些地方总结不到位，有则指出，无则加冕，感谢！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天在班上分享几种清除浮动的方法，讲到一半突然忘了，贼尴尬，于是自己在网上找了几种解决办法来清除浮动&lt;/p&gt;
&lt;p&gt;先看一段代码—-html&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>元素js获取css样式</title>
    <link href="https://www.xjt5213.club/2019/04/08/%E5%8E%9F%E7%94%9Fjs%E8%8E%B7%E5%8F%96css%E6%A0%B7%E5%BC%8F/"/>
    <id>https://www.xjt5213.club/2019/04/08/原生js获取css样式/</id>
    <published>2019-04-08T02:39:39.000Z</published>
    <updated>2019-04-10T03:18:25.769Z</updated>
    
    <content type="html"><![CDATA[<p>最近在写js代码的时候碰到了一个问题：用原生js并不能完全获取css样式属性。</p><h4 id="1，内部样式表情况"><a href="#1，内部样式表情况" class="headerlink" title="1，内部样式表情况"></a>1，内部样式表情况</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementsByTagName(<span class="string">"div"</span>)[<span class="number">0</span>].style.backgroundColor=<span class="string">"green"</span>; <span class="comment">//可以写入样式</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">document</span>.getElementsByTagName(<span class="string">"div"</span>)[<span class="number">0</span>].style.width);  <span class="comment">//不能够获取样式属性</span></span><br></pre></td></tr></table></figure><p><span style="background:yellow">当用内部样式表的时候用这种方式的时候只能给css写入样式，并不能获取css样式。<span></span></span></p><h4 id="2，内联样式情况"><a href="#2，内联样式情况" class="headerlink" title="2，内联样式情况"></a>2，内联样式情况</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementsByTagName(<span class="string">"div"</span>)[<span class="number">0</span>].style.backgroundColor=<span class="string">"green"</span>; <span class="comment">//可以写入样式</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">document</span>.getElementsByTagName(<span class="string">"div"</span>)[<span class="number">0</span>].style.width);  <span class="comment">//能够获取样式属性</span></span><br></pre></td></tr></table></figure><p><span style="background:yellow">当使用内部样式表的时候，采用上面的js代码既可以获取样式属性，还可以给标签写入样式，但是使用内联样式的话会使得html代码显得很繁琐，没有规则，所以不推荐。<span></span></span></p><p>后来在网上查找了一些方法，发现了几种解决办法  </p><p>方法一，使用<code>window.getComputedStyle(参数一，参数二)</code>; <code>参数一</code>：元素，<code>参数二</code>：当前元素的伪类，一般写<code>null</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> divs=<span class="built_in">document</span>.getElementsByTagName(<span class="string">"div"</span>)[<span class="number">0</span>];</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">window</span>.getComputedStyle(divs,<span class="literal">null</span>).width);   <span class="comment">//获取宽度</span></span><br></pre></td></tr></table></figure><p>这个方法在ie6-8上面不兼容，获取的内容为只读，并不能写入，所以我又找了一种方法</p><p>方法二，在ie上使用currentStyle属性</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近在写js代码的时候碰到了一个问题：用原生js并不能完全获取css样式属性。&lt;/p&gt;
&lt;h4 id=&quot;1，内部样式表情况&quot;&gt;&lt;a href=&quot;#1，内部样式表情况&quot; class=&quot;headerlink&quot; title=&quot;1，内部样式表情况&quot;&gt;&lt;/a&gt;1，内部样式表情况&lt;/h
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://www.xjt5213.club/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>http深入浅出--http请求</title>
    <link href="https://www.xjt5213.club/2019/04/08/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80--Http%E8%AF%B7%E6%B1%82/"/>
    <id>https://www.xjt5213.club/2019/04/08/学习笔记一--Http请求/</id>
    <published>2019-04-08T02:39:39.000Z</published>
    <updated>2019-04-08T03:02:12.858Z</updated>
    
    <content type="html"><![CDATA[<p style="text-indent:2em;">HTTP(HyperText Transfer Protocol)是一套计算机通过网络进行通信的规则。计算机专家设计出HTTP，使HTTP客户（如Web浏览器）能够从HTTP服务器(Web服务器)请求信息和服务，HTTP目前协议的版本是1.1.HTTP是一种无状态的协议，无状态是指Web浏览器和Web服务器之间不需要建立持久的连接，这意味着当一个客户端向服务器端发出请求，然后Web服务器返回响应(response)，连接就被关闭了，在服务器端不保留连接的有关信息.HTTP遵循请求(Request)/应答(Response)模型。Web浏览器向Web服务器发送请求，Web服务器处理请求并返回适当的应答。所有HTTP连接都被构造成一套请求和应答。</p><p style="text-indent:2em;">HTTP使用内容类型，是指Web服务器向Web浏览器返回的文件都有与之相关的类型。所有这些类型在MIME　Internet邮件协议上模型化，即Web服务器告诉Web浏览器该文件所具有的种类，是HTML文档、GIF格式图像、声音文件还是独立的应用程序。大多数Web浏览器都拥有一系列的可配置的辅助应用程序，它们告诉浏览器应该如何处理Web服务器发送过来的各种内容类型。</p><h4 id="HTTP通信机制是在一次完整的HTTP通信过程中，Web浏览器与Web服务器之间将完成下列7个步骤："><a href="#HTTP通信机制是在一次完整的HTTP通信过程中，Web浏览器与Web服务器之间将完成下列7个步骤：" class="headerlink" title="HTTP通信机制是在一次完整的HTTP通信过程中，Web浏览器与Web服务器之间将完成下列7个步骤："></a>HTTP通信机制是在一次完整的HTTP通信过程中，Web浏览器与Web服务器之间将完成下列7个步骤：</h4><h5 id="1-建立TCP连接"><a href="#1-建立TCP连接" class="headerlink" title="1,建立TCP连接"></a>1,建立TCP连接</h5><p>在HTTP工作开始之前，Web浏览器首先要通过网络与Web服务器建立连接，该连接是通过TCP来完成的，该协议与IP协议共同构建Internet，即著名的TCP/IP协议族，因此Internet又被称作是TCP/IP网络。HTTP是比TCP更高层次的应用层协议，根据规则，只有低层协议建立之后才能，才能进行更层协议的连接，因此，首先要建立TCP连接，一般TCP连接的端口号是80</p><h5 id="2-Web浏览器向Web服务器发送请求命令"><a href="#2-Web浏览器向Web服务器发送请求命令" class="headerlink" title="2,Web浏览器向Web服务器发送请求命令"></a>2,Web浏览器向Web服务器发送请求命令</h5><p>一旦建立了TCP连接，Web浏览器就会向Web服务器发送请求命令 例如：GET/sample/hello.jsp HTTP/1.1  </p><h5 id="3-Web浏览器发送请求头信息"><a href="#3-Web浏览器发送请求头信息" class="headerlink" title="3,Web浏览器发送请求头信息"></a>3,Web浏览器发送请求头信息</h5><p>浏览器发送其请求命令之后，还要以头信息的形式向Web服务器发送一些别的信息，之后浏览器发送了一空白行来通知服务器，它已经结束了该头信息的发送。  </p><h5 id="4-Web服务器应答"><a href="#4-Web服务器应答" class="headerlink" title="4,Web服务器应答"></a>4,Web服务器应答</h5><p>客户机向服务器发出请求后，服务器会客户机回送应答。eg:  HTTP/1.1 200 OK</p><h5 id="5，Web服务器应答头信息"><a href="#5，Web服务器应答头信息" class="headerlink" title="5，Web服务器应答头信息"></a>5，Web服务器应答头信息</h5><p>正如客户端会随同请求发送关于自身的信息一样，服务器也会随同应答向用户发送关于它自己的数据及被请求的文档。   </p><h5 id="6-Web服务器向浏览器发送数据"><a href="#6-Web服务器向浏览器发送数据" class="headerlink" title="6,Web服务器向浏览器发送数据"></a>6,Web服务器向浏览器发送数据</h5><p>Web服务器向浏览器发送头信息后，它会发送一个空白行来表示头信息的发送到此为结束，接着，它就以Content-Type应答头信息所描述的格式发送用户所请求的实际数据  </p><h5 id="7-Web服务器关闭TCP连接"><a href="#7-Web服务器关闭TCP连接" class="headerlink" title="7,Web服务器关闭TCP连接"></a>7,Web服务器关闭TCP连接</h5><p>一般情况下，一旦Web服务器向浏览器发送了请求数据，它就要关闭TCP连接，然后如果浏览器或者服务器在其头信息加入了这行代码<code>Connection:keep-alive</code> TCP连接在发送后将仍然保持打开状态，于是，浏览器可以继续通过相同的连接发送请求。保持连接节省了为每个请求建立新连接所需的时间，还节约了网络带宽。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p style=&quot;text-indent:2em;&quot;&gt;HTTP(HyperText Transfer Protocol)是一套计算机通过网络进行通信的规则。计算机专家设计出HTTP，使HTTP客户（如Web浏览器）能够从HTTP服务器(Web服务器)请求信息和服务，HTTP目前
      
    
    </summary>
    
    
      <category term="学习笔记" scheme="https://www.xjt5213.club/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>利用oneindex将onedrive打造成一个在线查看和下载文件的网盘</title>
    <link href="https://www.xjt5213.club/2019/04/07/oneindex%E6%95%99%E7%A8%8B/"/>
    <id>https://www.xjt5213.club/2019/04/07/oneindex教程/</id>
    <published>2019-04-07T12:03:21.000Z</published>
    <updated>2019-04-07T15:07:34.541Z</updated>
    
    <content type="html"><![CDATA[<p style="text-indent:2em">之前弄了一个onedrive账号，专门用来存一些电影，容量是5T，挺大的，用oneindex来将onedrive打造成一款可以在线观看和下载视频或者文件的一个小网站最好不过了</p>  <h3 id="1，注册免费空间"><a href="#1，注册免费空间" class="headerlink" title="1，注册免费空间"></a>1，注册免费空间</h3><p>我用的是<code>000webhost</code>,所以我就拿这个来做了，附上注册链接：<a href="https://www.000webhost.com/free-website-sign-up" target="_blank" rel="noopener">https://www.000webhost.com/free-website-sign-up</a></p><p><img src="https://i.loli.net/2019/04/07/5ca9f21f438f4.png" alt="1"></p><p>填写邮箱和密码就可以注册了，是不是非常简单……..   </p><h3 id="2，网站后台"><a href="#2，网站后台" class="headerlink" title="2，网站后台"></a>2，网站后台</h3><p>接下来登陆进入后台会看到大概如图所示的样子，点击<code>Manage Websites</code>管理网站</p><p><img src="https://i.loli.net/2019/04/07/5ca9f21fe1479.png" alt="2"></p><p>点进去之后就是这个样子 ,然后点击<code>File manager</code></p><p><img src="https://i.loli.net/2019/04/07/5ca9f35903656.png" alt="3"></p><p>出现这个 </p><p><img src="https://i.loli.net/2019/04/07/5ca9f3adc47eb.png" alt="4"></p><p>点击<code>Upload files now</code> 出现下图</p><p><img src="https://i.loli.net/2019/04/07/5ca9f3f8ecdf1.png" alt="5"></p><h3 id="3，oneindex部署"><a href="#3，oneindex部署" class="headerlink" title="3，oneindex部署"></a>3，oneindex部署</h3><p>先附上oneindex下载地址:<a href="https://github.com/donwa/oneindex" target="_blank" rel="noopener">https://github.com/donwa/oneindex</a></p><p><img src="https://i.loli.net/2019/04/07/5ca9f50682eb1.png" alt="6"></p><p>下载完成后,点击这个上传按钮把刚下的压缩包上传即可  注意：是上传至<code>public_html</code>文件夹下</p><p><img src="https://i.loli.net/2019/04/07/5ca9f587a6ae3.png" alt="5">   </p><p>上传完了之后，网站目录下就会出现这个压缩包了</p><p><img src="https://i.loli.net/2019/04/07/5ca9f70899168.png" alt="7">  </p><p>然后右键单击压缩包解压</p><p><img src="https://i.loli.net/2019/04/07/5ca9f74da64c8.png" alt="8"></p><p>注意：还是解压至<code>public_html</code>目录下，可能因为某些原因压缩包解压不了，那么只能在本地解压了，然后把文件和文件夹一个一个地上传到该目录下，注意空文件夹也要上传哦</p><p>解压完或者上传完之后的文件大概是这个样子的</p><p><img src="https://i.loli.net/2019/04/07/5ca9f8423c04d.png" alt="10"></p><p>这个时候oneindex就部署完了</p><h3 id="4，oneindex设置"><a href="#4，oneindex设置" class="headerlink" title="4，oneindex设置"></a>4，oneindex设置</h3><p>点击你的网址就会看到oneindex的设置界面了</p><p><img src="https://i.loli.net/2019/04/07/5ca9f9266e7de.png" alt="11"></p><p><img src="https://www.xzymoe.com/wp-content/uploads/2018/06/oneindex-install-envi.png" alt="12"></p><p>下一步即可</p><p><img src="https://www.xzymoe.com/wp-content/uploads/2018/06/oneindex-id-secret-768x420.png" alt="13"></p><p><img src="https://raw.githubusercontent.com/donwa/oneindex/files/images/install.gif" alt="14"></p><p>然后获取应用id和机密分别填入第一栏和第二栏，第三栏不动   下一步。</p><p><img src="https://raw.githubusercontent.com/donwa/oneindex/files/images/install.gif" alt="15"></p><p>绑定账号之后刷新你的网址就可以了</p><p>安装完成后可以通过后台登录对OneIndex进行管理</p><p>后台网址：你的原有网址上+<code>/?/admin</code>即可，初次登陆需要密码，默认密码是<code>oneindex</code></p><p><img src="https://i.loli.net/2019/04/07/5ca9fbc80ab0b.png" alt="15"></p><p>上传文件到你的onedrive就可以在这个网站上同步显示了，如果是视频可以在线观看</p><h3 id="5，指定文件夹加密"><a href="#5，指定文件夹加密" class="headerlink" title="5，指定文件夹加密"></a>5，指定文件夹加密</h3><p>如果你要给你的网站加密码，只有输入密码才能访问的话，<code>win+R</code>输入<code>cmd</code></p><p>进入到你的桌面路径</p><p>在弹出的命令行输入<code>echo 你设置的密码-&gt;password</code>回车</p><p>在你的桌面会出现一个后缀为<code>.password</code>的文件，把这个文件放入你想加密的文件夹里面，到oneindex后台<code>刷新缓存</code>之后重新进入你的网站就会要求输入密码访问了。</p><h3 id="6，文件上传"><a href="#6，文件上传" class="headerlink" title="6，文件上传"></a>6，文件上传</h3><p>上传文件的话直接用onedrive上传即可，刷新你的网站即可看到上传的文件。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p style=&quot;text-indent:2em&quot;&gt;之前弄了一个onedrive账号，专门用来存一些电影，容量是5T，挺大的，用oneindex来将onedrive打造成一款可以在线观看和下载视频或者文件的一个小网站最好不过了&lt;/p&gt;  

&lt;h3 id=&quot;1，注册免费空间&quot;&gt;
      
    
    </summary>
    
    
      <category term="教程" scheme="https://www.xjt5213.club/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>自建爬梯教程</title>
    <link href="https://www.xjt5213.club/2019/04/06/%E7%88%AC%E6%A2%AF%E6%95%99%E7%A8%8B/"/>
    <id>https://www.xjt5213.club/2019/04/06/爬梯教程/</id>
    <published>2019-04-06T09:37:08.000Z</published>
    <updated>2019-04-08T09:50:56.135Z</updated>
    
    <content type="html"><![CDATA[<p style="text-indent:2em">之前自建爬梯的时候老是自己在网上找教程，非常啰嗦，所以写一篇搭建教程，为了以后的方便吧</p>  <h3 id="1，注册vps"><a href="#1，注册vps" class="headerlink" title="1，注册vps"></a>1，注册vps</h3><p style="text-indent:2em">首先你得有一个vps,至于是什么vps,本人不才，用的vultr，其实很多人都说vultr现在不好用了，过于泛滥，其实我觉得还行吧，可能是挺早之前买的缘故吧，听说后面买的比较容易被盯上。话不多说，开始上教程。</p><br><p>首先，去注册一个vultr账号，其他的vps也一样需要注册账号，附上链接：<a href="https://www.vultr.com/" title="vultr" target="_blank" rel="noopener"><code>https://www.vultr.com/</code></a>然后在下图中填上你要注册的邮箱和密码点击<code>Create Account</code>就可以了,是不是特别简单。</p><p><img src="https://i.loli.net/2019/04/06/5ca89b0d2a9b3.png" alt="注册"></p><h3 id="2，充值"><a href="#2，充值" class="headerlink" title="2，充值"></a>2，充值</h3><p><span>在注册完成之后，就要给vultr充值了，用来购买套餐，vultr充值方式比较多，支持国内的支付宝和微信支付，首次登陆之后出现的界面就是充值界面了,选择你需要的充值方式进行充值即可</span></p><p><img src="https://i.loli.net/2019/04/06/5ca89d5c2602c.png" alt="充值"><br><span>选择好充值方式和充值金额之后，点击下方的充值按钮进行支付就行了</span></p><h3 id="3，套餐选择"><a href="#3，套餐选择" class="headerlink" title="3，套餐选择"></a>3，套餐选择</h3><p><span>充值完成之后，点击左侧栏的第一个进行服务器购买</span></p><p><img src="https://i.loli.net/2019/04/06/5ca89f51efeff.png" alt="1"><br><span>1，Server Location：是选择机房的位置，一般来说是离大陆越近越好，我选择的是日本机房，根据你们的情况自行选择即可</span></p><p><img src="https://i.loli.net/2019/04/06/5ca89f53230b8.png" alt="2"><br><span>2,Server Type:是选择vps需要装的系统,一般来说选择centos或者Debian就可以了，我选择的是Debian9x64的，你们根据实际情况自行选择</span></p><p><img src="https://i.loli.net/2019/04/06/5ca89f53247a0.png" alt="3"><br><span>3,Server Size:这里选择服务器的内存和月流量，如果你是一个人用的话推荐月付$3.5的或者$5的套餐即可</span></p><p><img src="https://i.loli.net/2019/04/06/5ca89f53a2f18.png" alt="4"><br><span>上面步骤执行完之后，下面的那些内容就不用管了，直接点击最下方的Deploy now即可</span></p><p><img src="https://i.loli.net/2019/04/06/5ca8a1f5d82b5.png" alt="5"><br><span>等待几分钟之后会出现下图所示</span><br><img src="https://i.loli.net/2019/04/06/5ca8a28f1c060.png" alt="6"><br><span>点击服务器，会进入到详细页面,下图所示是一般需要了解的地方</span></p><p><img src="https://i.loli.net/2019/04/06/5ca8a417eb0de.png" alt="7"></p><h3 id="4，登陆vps后台进行配置"><a href="#4，登陆vps后台进行配置" class="headerlink" title="4，登陆vps后台进行配置"></a>4，登陆vps后台进行配置</h3><p><span>这里我们需要下载一个软件叫xshell,xftp也可以，我用的是xshell,你们根据自己的需要自行选择，附上链接<code>https://www.netsarang.com/zh/free-for-home-school/</code>这个是免费版，填上你的姓名和邮箱之后会把下载链接发送到你的邮箱进行下载即可，下载完之后安装打开,点击新建</span></p><p><img src="https://i.loli.net/2019/04/06/5ca8aacc113de.png" alt="8"><br><span>上面填入你的主机名，即IP地址，填完之后点击左侧的用户身份验证</span></p><p><img src="https://i.loli.net/2019/04/06/5ca8aaccbf6eb.png" alt="9"><br><span>验证之后会跳到另一个页面，上面填写你的用户名root，和密码（密码在vps详情页面信息可以看到，教程上面有截图），填完之后点击下方的连接即可,在之后弹出的对话框中选择一次性接受就可以了</span></p><p><img src="https://i.loli.net/2019/04/06/5ca8aacd0f250.png" alt="11"></p><p><img src="https://i.loli.net/2019/04/06/5ca8aacaa16f9.png" alt="12"><br><span>不出意外的话，右侧的命令行最下方会出现root字样的一行，说明你成功登陆了</span><br><img src="https://i.loli.net/2019/04/06/5ca8aaca130fe.png" alt="13"></p><h3 id="5，脚本安装-敲黑板，重点来了！！！！"><a href="#5，脚本安装-敲黑板，重点来了！！！！" class="headerlink" title="5，脚本安装(敲黑板，重点来了！！！！)"></a>5，脚本安装(敲黑板，重点来了！！！！)</h3><p><span>成功登陆之后，就可以开始梯子的脚本安装了，我用的是GitHub上一位大牛的一键脚本(教程最后附上链接，有需要的朋友可以去看看)，一键傻瓜式安装即可，在命令行输入以下命令然后回车安装即可</span></p><h4 id="5-1安装-amp-更新命令"><a href="#5-1安装-amp-更新命令" class="headerlink" title="5.1安装&amp;更新命令"></a>5.1安装&amp;更新命令</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -q -<span class="keyword">N</span> --<span class="keyword">no</span>-check-certificate http<span class="variable">s:</span>//raw.githubusercontent.<span class="keyword">com</span>/FunctionClub/SSR-Bash-Python/master/install.<span class="keyword">sh</span> &amp;&amp; bash install.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure><h4 id="5-2自检命令（没啥用，可以省略）"><a href="#5-2自检命令（没啥用，可以省略）" class="headerlink" title="5.2自检命令（没啥用，可以省略）"></a>5.2自检命令（没啥用，可以省略）</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -q -<span class="keyword">N</span> --<span class="keyword">no</span>-check-certificate http<span class="variable">s:</span>//raw.githubusercontent.<span class="keyword">com</span>/FunctionClub/SSR-Bash-Python/master/self-check.<span class="keyword">sh</span> &amp;&amp; bash self-check.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure><h4 id="5-3卸载命令"><a href="#5-3卸载命令" class="headerlink" title="5.3卸载命令"></a>5.3卸载命令</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -q -<span class="keyword">N</span> --<span class="keyword">no</span>-check-certificate http<span class="variable">s:</span>//raw.githubusercontent.<span class="keyword">com</span>/FunctionClub/SSR-Bash-Python/master/install.<span class="keyword">sh</span> &amp;&amp; bash install.<span class="keyword">sh</span> uninstall</span><br></pre></td></tr></table></figure><p><span>执行完上面的安装命令之后，然后在命令行输入<code>ssr</code>就可以运行脚本了,输入对应的数字就可以进行操作了</span><br><img src="https://i.loli.net/2019/04/06/5ca8b380868e7.png" alt="14"></p><p><span>输入数字6回车,会提示输入用户名，密码，流量（每输入一个都要回车哦）</span></p><p><img src="https://i.loli.net/2019/04/06/5ca8b471dca11.png" alt="15"><br><img src="https://i.loli.net/2019/04/06/5ca8b471b3092.png" alt="16"><br><img src="https://i.loli.net/2019/04/06/5ca8b4719c997.png" alt="17"><br><span>上面的步骤做完之后，一个梯子节点就生成了，往上拉一点，应该会出现下图相似的信息,复制标注的这段代码。</span><br><img src="https://i.loli.net/2019/04/06/5ca8b5d151440.png" alt="18"></p><h3 id="6，节点的使用"><a href="#6，节点的使用" class="headerlink" title="6，节点的使用"></a>6，节点的使用</h3><h4 id="6-1-手机使用"><a href="#6-1-手机使用" class="headerlink" title="6.1,手机使用"></a>6.1,手机使用</h4><p><span>如果你想在手机上使用的话。下载这个软件。下载地址：<a href="https://github.com/shadowsocksrr/shadowsocksr-latest-bin-backup/raw/master/Shadowsocksr-android-3.4.0.5.apk" target="_blank" rel="noopener"><code>https://github.com/shadowsocksrr/shadowsocksr-latest-bin-backup/raw/master/Shadowsocksr-android-3.4.0.5.apk</code></a>下载完成后打开</span></p><p><img src="https://i.loli.net/2019/04/06/5ca8b9870959c.png" alt="19"></p><p><span>点击右下角+号，有个从剪切板导入，把刚刚复制的代码导入就行了，注意路由选择绕过局域网及中国大陆地址，不然访问国内的软件也会走vps流量哦</span></p><h4 id="6-2，电脑使用"><a href="#6-2，电脑使用" class="headerlink" title="6.2，电脑使用"></a>6.2，电脑使用</h4><p><span>如果你想在电脑上使用的话。下载这个软件。下载地址：<a href="https://github.com/shadowsocksrr/shadowsocksr-csharp/releases/download/4.9.0/ShadowsocksR-win-4.9.0.zip" target="_blank" rel="noopener"><code>https://github.com/shadowsocksrr/shadowsocksr-csharp/releases/download/4.9.0/ShadowsocksR-win-4.9.0.zip</code></a>下载完成后解压，打开解压的文件夹，双击如图所示的图标之后右下角的任务栏会有小飞机的图标，鼠标右键单击这个图标，会有剪切板批量导入ssr:链接，还是复制刚才那段代码选择导入即可，导入完成之后注意系统代理模式选择PAC,代理规则选择绕过局域网和大陆即可</span><br><img src="https://i.loli.net/2019/04/06/5ca8bb32df989.png" alt="20"></p><p><img src="https://i.loli.net/2019/04/06/5ca8bd7b71a68.png" alt="21"></p><h4>本教程的一键安装脚本由GitHub大佬提供，附上大佬链接<a href="https://github.com/FunctionClub/SSR-Bash-Python" target="_blank" rel="noopener"><code>https://github.com/FunctionClub/SSR-Bash-Python</code></a>有需要的朋友可以去看看哦</h4><h4>本人第一次写教程，写的不好的地方欢迎在下方提出，以便以后可以改进，感谢哦</h4>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p style=&quot;text-indent:2em&quot;&gt;之前自建爬梯的时候老是自己在网上找教程，非常啰嗦，所以写一篇搭建教程，为了以后的方便吧&lt;/p&gt;  

&lt;h3 id=&quot;1，注册vps&quot;&gt;&lt;a href=&quot;#1，注册vps&quot; class=&quot;headerlink&quot; title=&quot;
      
    
    </summary>
    
    
      <category term="教程" scheme="https://www.xjt5213.club/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>开篇随笔</title>
    <link href="https://www.xjt5213.club/2019/04/01/%E5%BC%80%E7%AF%87%E9%9A%8F%E7%AC%94/"/>
    <id>https://www.xjt5213.club/2019/04/01/开篇随笔/</id>
    <published>2019-04-01T09:19:37.000Z</published>
    <updated>2019-04-05T05:08:23.057Z</updated>
    
    <content type="html"><![CDATA[<p style="text-indent:2em">历经了各种艰难险阻（其实是自己太水），才完成这个blog的搭建，可以说是一个小小白了，搭建的过程中各种碰壁，不过最终还是完了，感觉内心还是蛮有成就感的，最近在开始接触前端知识，以后这个地方就作为我写一点学习笔记的地方吧，分享算不上，前面说了是小小白哈哈哈。</p><br><p style="text-indent:2em">目前大四，正处于找工作的黄金时期，其实静下心来学习是一件非常不容易的事情，当你的同学室友都纷纷出去找工作实习去了，而你还在上课，其实我的内心是非常焦灼的，然而没办法。只恨当初在学校的时候没有好好学习，手动留下悔恨的泪水表情包。</p><br><p style="text-indent:2em">至于为什么选择入前端这个行业，其实我自己也说不清，通俗点来讲的话是比较容易入门吧。其实在这之前自学过一段时间java，说说自学的感想吧，每天看视频，码代码，刚开始还是挺有兴趣的，可是到后来慢慢的就坚持不下去了，没有学习的氛围真的会让我坚持不下去，不知道你们会不会这样，就这样自学了不到一个月就不了了之了，然后就转前端了。。。。</p><br><p style="text-indent:2em">再讲一下去年秋招面试的各种经历吧，总结成四个字就是四处碰壁。当时刚开始的想法是找一个开发岗位的工作，信心满满，没错是梁静茹给我的勇气，跑各大学校的招聘会，在现场跟面试官交流的过程中，面试官问我有没有做过项目，我说没有。。。。。然后又问了一些关于框架的知识，我都是一脸懵，然后把简历留在那里说等通知，自己灰溜溜的走了，后来才意识到自己在这方面的不足，基本上每次面试都逃不过这两个问题。当时就感觉有点人生充满了绝望，当时是出于这样一种情况，想找一个好工作，可是水平又打不到。后来于是降低了标准，不找开发岗了，找一个技术支持岗吧，又开始在各大招聘网站上广撒网，等面试通知，后来找到一个相关工作，整天坐在电脑面前帮客户解决各种售前售后问题，一个人得照看三台电脑，工作了刚好一个星期，突然某一天快下班的时候被人事经理叫过去谈话，说我一个人照看三台电脑有点吃力，可能是不太适合这份工作，so……我第一次被炒……也没有很失望，本来我自己就不喜欢那份工作，无所谓。然后就回家过年了哈哈哈哈，心真大。说真的 ，找一份自己感兴趣的工作真的非常重要。诶！不说了，都是泪。</p><br><p style="text-indent:2em">其实我感觉我对计算机挺感兴趣的，每次做完一个东西都感觉特别有成就感，尽管在某些大牛眼里是一个非常普通的东西。但是同时也不知道自己是不是真的适合干这个行业，还是那句话，不管结果如何，自己尽力了就好。</p><p>ps:不知道写点啥了，以后想起来再写吧，希望最后活成自己想要的样子。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p style=&quot;text-indent:2em&quot;&gt;历经了各种艰难险阻（其实是自己太水），才完成这个blog的搭建，可以说是一个小小白了，搭建的过程中各种碰壁，不过最终还是完了，感觉内心还是蛮有成就感的，最近在开始接触前端知识，以后这个地方就作为我写一点学习笔记的地方吧，分享算
      
    
    </summary>
    
    
  </entry>
  
</feed>
